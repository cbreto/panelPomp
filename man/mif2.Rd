% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mif2.R, R/mif2_methods.R
\docType{class}
\name{mif2}
\alias{mif2}
\alias{mif2d.ppomp-class}
\alias{mif2,panelPomp-method}
\alias{mif2,mif2d.ppomp-method}
\alias{conv.rec,mif2d.ppomp-method}
\title{PIF: Panel iterated filtering}
\usage{
\S4method{mif2}{panelPomp}(object, Nmif = 1, shared.start, specific.start,
  start, Np, rw.sd, transform = FALSE, cooling.type = c("hyperbolic",
  "geometric"), cooling.fraction.50, tol = 1e-17,
  verbose = getOption("verbose"), ...)

\S4method{mif2}{mif2d.ppomp}(object, Nmif, shared.start, specific.start, start,
  Np, rw.sd, transform, cooling.type, cooling.fraction.50, tol, ...)

\S4method{conv.rec}{mif2d.ppomp}(object, pars, ...)
}
\arguments{
\item{object}{An object of class \code{panelPomp} or inheriting class.}

\item{Nmif}{
    The number of filtering iterations to perform.
  }

\item{shared.start}{named numerical vector; the starting guess of the shared parameters.}

\item{specific.start}{matrix with row parameter names and column unit names; 
the starting guess of the specific parameters.}

\item{start}{A named numeric vector of parameters at which to start the IF2 procedure.}

\item{Np}{
    the number of particles to use in filtering.
    This may be specified as a single positive integer, in which case the same number of particles will be used at each timestep.
    Alternatively, if one wishes the number of particles to vary across timestep, one may specify \code{Np} either as a vector of positive integers (of length \code{length(time(object))}) or as a function taking a positive integer argument.
    In the latter case, \code{Np(n)} must be a single positive integer, representing the number of particles to be used at the \code{n}-th timestep:
    \code{Np(1)} is the number of particles to use going from \code{timezero(object)} to \code{time(object)[1]},
    \code{Np(2)}, from \code{time(object)[1]} to \code{time(object)[2]},
    and so on.
    \strong{Note that this behavior differs from that of \code{\link{mif}}!}
  }

\item{rw.sd}{An unevaluated expression of the form \code{quote(rw.sd())} to 
be used for all panel units. If a \code{list} of such expressions of the 
same length as the \code{object} argument is provided, each list element 
will be used for the corresponding panel unit.}

\item{transform}{logical; if TRUE, optimization is performed on the 
estimation scale (see \code{pomp} documentation).}

\item{cooling.type}{
    specifications for the cooling schedule, i.e., the manner in which the intensity of the parameter perturbations is reduced with successive filtering iterations.
    \code{cooling.type} specifies the nature of the cooling schedule.
    See below (under \dQuote{Specifying the perturbations}) for more detail.
  }

\item{cooling.fraction.50}{cooling.fraction.50 (seems to cause an error if 
documentation inherited from 'pomp' package).}

\item{tol}{
    passed to the particle filter.
    See the descriptions under \code{\link{pfilter}}.
  }

\item{verbose}{
    logical; if TRUE, print progress reports.
  }

\item{...}{....}

\item{pars}{names of parameters.}
}
\description{
Tools for applying iterated filtering algorithms to panel data.
The panel iterated filtering of Breto et al. (2018) extends to 
panel models the improved iterated filtering algorithm (Ionides et al., 
2015) for estimating parameters of a partially observed Markov process.
Iterated filtering algorithms rely on extending a partially observed Markov 
process model of interest by introducing random perturbations to the model 
parameters. The space where the original parameters live is then explored 
at each iteration by running a particle filter. Convergence to a maximum 
likelihood estimate has been established for appropriately constructed 
procedures that iterate this search over the parameter space while 
diminishing the intensity of perturbations (Ionides et al. 2006, 2011, 2015).
}
\references{
\breto2018

\ionides2006

\ionides2011

\ionides2015

\king2015
}
\seealso{
\pkg{pomp}'s mif2 at \link[=mif2,pomp-method]{mif2}, 
\link{panel_loglik}

Other panelPomp workhorse functions: \code{\link{panelPomp}},
  \code{\link{panel_loglik}}, \code{\link{pfilter}}
}
