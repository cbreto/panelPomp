
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(panelPomp,quietly=TRUE)
> 
> TESTS_PASS <- NULL
> test <- function(expr1,expr2,all="TESTS_PASS",env=parent.frame(),...) 
+   panelPomp:::test(expr1,expr2,all=all,env=env,...)
> 
> ppo <- pompExample(prw,envir=NULL)[[1]]
> po <- ppo[[1]]
> 
> ep <- wQuotes("Error : in ''mif2'': ")
> et <- wQuotes(" (''mif2,panelPomp-method'')\n")
> ## test checks for missing arguments
> test(wQuotes(ep,"''object'' is a required argument\n"),
+      mif2(Np=10,rw.sd=rw.sd(sigmaX=0.05,X.0=0.5),cooling.fraction.50=0.5))
[1] TRUE
> test(wQuotes(ep,"Missing ''Np'' argument.",et),
+      mif2(ppo,rw.sd=rw.sd(sigmaX=0.05,X.0=0.5),cooling.fraction.50=0.5)) 
[1] TRUE
> test(wQuotes(ep,"missing ''rw.sd'' argument.",et),
+      mif2(ppo,Np=10,cooling.fraction.50=0.5))
[1] TRUE
> test(wQuotes(ep,"Missing ''cooling.fraction.50'' argument.",et),
+      mif2(ppo,Np=10,rw.sd=rw.sd(sigmaX=0.05,X.0=0.5)))
[1] TRUE
> try(mif2(panelPomp(unitobjects(ppo)),Np=10,rw.sd=rw.sd(sigmaX=0.05,X.0=0.5),
+          cooling.fraction.50=0.5,sh=pparams(ppo)$sh))
Error : in ‘mif2’: pomp's ‘mif2’ error message: in ‘mif2’: the following parameter(s), given random walks in ‘rw.sd’, are not present in ‘start’: ‘X.0’ (panelPomp:::mif2.internal)
> try(mif2(panelPomp(unitobjects(ppo),shared=coef(po)),Np=10,sp=pparams(ppo)$sp,
+           rw.sd=rw.sd(sigmaX=0.05,X.0=0.5),cooling.fraction.50=0.5))
Error in validObject(.Object) : 
  invalid class “mif2d.ppomp” object: a parameter cannot be both shared and specific!
> ## assign parameters
> test(conv.rec(as(mif2(ppo,Np=10,rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+   cooling.type="geometric"),"list")[[1]])[1,-(1:2)],
+   c(ppo@shared,get_col(ppo@specific,1,1)))
[1] TRUE
> test(conv.rec(as(mif2(ppo,sh=2*ppo@shared,sp=2*ppo@specific,Np=10,
+                       rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+                       cooling.type="geometric"),"list")[[1]])[1,-(1:2)],
+      2*c(ppo@shared,get_col(ppo@specific,1,1)))
[1] TRUE
> test(conv.rec(as(mif2(ppo,shared.start=2*ppo@shared,Np=10,rw.sd=rw.sd(X.0=0.2),
+                       cooling.fraction.50=0.5,cooling.type="geometric"),
+                  "list")[[1]])[1,-(1:2)],
+      c(2*ppo@shared,get_col(ppo@specific,1,1)))
[1] TRUE
> test(conv.rec(as(mif2(ppo,sp=2*ppo@specific,Np=10,rw.sd=rw.sd(X.0=0.2),
+                       cooling.fraction.50=0.5,cooling.type="geometric"),
+                  "list")[[1]])[1,-(1:2)],
+      c(ppo@shared,2*get_col(ppo@specific,1,1)))
[1] TRUE
> test(conv.rec(as(mif2(ppo,st=list(shared=2*ppo@shared,specific=2*ppo@specific),
+   Np=10,rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+   cooling.type="geometric"),"list")[[1]])[1,-(1:2)],
+   2*c(ppo@shared,get_col(ppo@specific,1,1)))
[1] TRUE
> ## resolve multiple params
> try(mif2(ppo,shared=2*ppo@shared,
+   start=list(specific=ppo@specific,shared=ppo@shared),Np=10,
+   rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+   cooling.type="geometric"))
Error : in ‘mif2’: specify EITHER ‘start’ only OR ‘shared.start’ and/or ‘specific.start’. (‘mif2,panelPomp-method’)
> try(mif2(ppo,specific=2*ppo@specific,
+   start=list(shared=ppo@shared,specific=ppo@specific),Np=10,
+   rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+   cooling.type="geometric"))
Error : in ‘mif2’: specify EITHER ‘start’ only OR ‘shared.start’ and/or ‘specific.start’. (‘mif2,panelPomp-method’)
> try(mif2(ppo,sh=2*ppo@shared,sp=2*ppo@specific,
+           st=list(shared=ppo@shared,specific=ppo@specific),
+           Np=10,rw.sd=rw.sd(sigmaX=0.05,X.0=0.5),cooling.fraction.50=0.5,
+           cooling.type="geometric"))
Error : in ‘mif2’: specify EITHER ‘start’ only OR ‘shared.start’ and/or ‘specific.start’. (‘mif2,panelPomp-method’)
> ## wrong unit names
> try({
+   sp <- ppo@specific
+   colnames(sp) <- paste0(colnames(sp), "_")
+   mif2(ppo,Np=10,sp=sp,rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+        cooling.type="geometric")
+ })
Error : in ‘mif2’: specific parameter column-names must match the names of the units
> ## wrong unit-specific names
> try({
+   sp <- ppo@specific
+   rownames(sp) <- c("some_wrong_name")
+   mif2(ppo,Np=10,sp=sp,rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+        cooling.type="geometric")
+   })
Error : in ‘mif2’: pomp's ‘mif2’ error message: in ‘mif2’: the following parameter(s), given random walks in ‘rw.sd’, are not present in ‘start’: ‘X.0’ (panelPomp:::mif2.internal)
> ##  wrong shared names
> try(mif2(ppo,Np=10,sh=c(sth=0),rw.sd=rw.sd(X.0=0.2),cooling.fraction.50=0.5,
+           cooling.type="geometric"))
Error : in ‘mif2’: pomp's ‘mif2’ error message: in ‘mif2’: in ‘mif2.pfilter’: process simulation error: in ‘discrete.time.sim’ plugin: variable 'sigmaY' not found among the parameters (panelPomp:::mif2.internal)
> 
> mf <- mif2(ppo,Np=10,rw.sd=rw.sd(X.0=0.2),
+            cooling.fraction.50=0.5,cooling.type="geometric")
> mf <- mif2(mf,Nmif=2,start=coef(mf))
> test(dim(conv.rec(mf)),c(3L,10L))
[1] TRUE
> test(dim(conv.rec(mf,c("loglik","sigmaY"))),c(3L,2L))
[1] TRUE
> test(dim(conv.rec(mf,c("loglik","sigmaY","X.0"))),c(3L,4L))
[1] TRUE
> test(dim(conv.rec(mf,c("loglik","unitLoglik"))),c(3L,3L))
[1] TRUE
> 
> 
> ## check whether all tests passed
> all(get(eval(formals(test))$all))
[1] TRUE
> if (!all(get(eval(formals(test))$all))) stop("Not all tests passed!")
> 
> 
